// <auto-generated />
using System;
using FirstAPI.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstAPI.DataAccess.Migrations
{
    [DbContext(typeof(TodoDbContex))]
    [Migration("20240813140448_AuthorDataSeeds")]
    partial class AuthorDataSeeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirstAPI.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Dineth Janitha"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Sahan Madawa"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Pasan Yasas"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Chamod Lakshitha"
                        });
                });

            modelBuilder.Entity("FirstAPI.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Created = new DateTime(2024, 8, 13, 19, 34, 47, 816, DateTimeKind.Local).AddTicks(8997),
                            Description = "Test Description 1 - DB",
                            Due = new DateTime(2024, 8, 14, 19, 34, 47, 816, DateTimeKind.Local).AddTicks(9009),
                            Status = 0,
                            Title = "Test 1"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 3,
                            Created = new DateTime(2024, 8, 13, 19, 34, 47, 816, DateTimeKind.Local).AddTicks(9018),
                            Description = "Test Description 3 - DB",
                            Due = new DateTime(2024, 8, 14, 19, 34, 47, 816, DateTimeKind.Local).AddTicks(9019),
                            Status = 1,
                            Title = "Test 2"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Created = new DateTime(2024, 8, 13, 19, 34, 47, 816, DateTimeKind.Local).AddTicks(9020),
                            Description = "Test Description 3 - DB",
                            Due = new DateTime(2024, 8, 14, 19, 34, 47, 816, DateTimeKind.Local).AddTicks(9021),
                            Status = 2,
                            Title = "Test 3"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Created = new DateTime(2024, 8, 13, 19, 34, 47, 816, DateTimeKind.Local).AddTicks(9022),
                            Description = "Test Description 4 - DB",
                            Due = new DateTime(2024, 8, 14, 19, 34, 47, 816, DateTimeKind.Local).AddTicks(9023),
                            Status = 0,
                            Title = "Test 4"
                        });
                });

            modelBuilder.Entity("FirstAPI.Models.Todo", b =>
                {
                    b.HasOne("FirstAPI.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
